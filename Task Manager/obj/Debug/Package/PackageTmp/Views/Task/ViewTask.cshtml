@{
    ViewBag.Title = "ViewTask";
    if (ViewData["id"].ToString() == "1")
    {
        Layout = "~/Views/Shared/_Home.cshtml";
    }
    else if (ViewData["id"].ToString() == "2")
    {
        Layout = "~/Views/Shared/Admin.cshtml";
    }
    else if (ViewData["id"].ToString() == "3")
    {
        Layout = "~/Views/Shared/Normal.cshtml";
    }
    else if (ViewData["id"].ToString() == "4")
    {
        Layout = "~/Views/Shared/CSR.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/Procurement.cshtml";
    }

}
<div id="page-wrapper">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">Task Detail</h1>
            <div align="center">
                <button class="btn" onclick="viewAll()">All</button>
                <button class="btn btn-info" onclick="statusWiseSort(0)">Un Assigned</button>
                <button class="btn btn-primary" onclick="statusWiseSort(1)">Pending</button>
                <button class="btn btn-success" onclick="statusWiseSort(2)">In Progress</button>
                <button class="btn btn-warning" onclick="statusWiseSort(3)">Complete</button>
                <button class="btn btn-danger" onclick="statusWiseSort(4)">Close</button>
            </div>
        </div>
        <!-- /.col-lg-12 -->
    </div>
    <!-- /.row -->
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Task Assigned
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <table class="table table-striped table-bordered table-hover" id="dataTables-exam" style="width: 100%!important">
                        <thead>
                            <tr>
                                <th>Task Name</th>
                                <th>Description</th>
                                <th>Assigned To</th>
                                <th>Created By</th>
                                <th>Created On</th>
                                <th>Start Date</th>
                                <th>End Date</th>
                                <th>Last Updated</th>
                                <th>SMS</th>
                                <th>Email</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="dynamic-Grid">
                            <tr id="abc"></tr>
                        </tbody>
                    </table>
                    <!-- /.table-responsive -->
                </div>
                <!-- /.panel-body -->

            </div>
            <!-- /.panel -->
        </div>
        <!-- /.col-lg-12 -->
        <!-- /.row -->
    </div>
</div>
<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" id="closeModal" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title center " id="noteHeading"> </h4>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div>
                                <div class="col-lg-12 spacing">
                                    <div class="col-lg-12">
                                        <div class="col-lg-6 ">
                                            <label>Add Note</label>
                                        </div>
                                        <div class="col-lg-6 ">
                                            ​<textarea id="note" rows="4" cols="30"></textarea>
                                        </div>
                                    </div>
                                    <div class="col-lg-12">
                                        <div class="col-lg-6">
                                            <label>File</label>
                                        </div>
                                        <div class="col-lg-6">
                                            <div>
                                                <input name="myFile" type="file" id="images" accept=".xls,.xlsx,.docx,.pdf,.jpg,.png" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-12">
                                        <div class="col-lg-offset-6 col-lg-6 ">
                                            <div>
                                                <label style="color:Red" id="noti" class="">

                                                </label>
                                            </div>
                                            <button class="btn btn-success" value="Add" onclick="addNote()"> Save </button>
                                        </div>
                                    </div>
                                    <!-- /.panel -->
                                </div>
                                <!-- /.col-lg-12 -->
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type=text/javascript>
    function status(value, user) {
        var model = { value: value, user: user };
        if (value == 0) {
            if (confirm('users wil be deleted from the task Are You sure?')) {
                // Save it!
                $.ajax({
                    async: false,
                    url: '/api/TaskApi/',
                    type: 'PUT',
                    data: model,
                    dataType: "json",
                    success: function (data) {

                    },
                    error: function () { alert('Grid Not Load'); }
                });
            } else {
                return;
            }
        }

    }
    $(document).ready(function () {
        $.ajax({
            async: false,
            url: '/api/TaskApi/',
            type: 'GET',
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (data) {
                console.log(data);
                filltable(data);
            },
            error: function () {

                alert('Grid Not Load');
            }
        });
    });
    function filltable(datas) {
        $('table#dataTables-exam tr#' + datas.id).add();
        $("#dataTables-exam").DataTable({

            "bDestroy": true,
            "aaSorting": [[7, 'desc']],
            "aaData": datas,
            "aoColumns": [

                { "mDataProp": "task_name" },
                { "mDataProp": "description" },
                { "mDataProp": "users" },
                { "mDataProp": "createdBy" },
                { "mDataProp": "created_Date" },
                { "mDataProp": ".startDate" },
                { "mDataProp": "endDate" },
                { "mDataProp": "lastModify" },
                { "mDataProp": "sms" },
                { "mDataProp": "email" },
                { "mDataProp": "status" },
                { "mDataProp": "button" }



            ]
        });

    }

    function statusWiseSort(id) {

        $.ajax({
            async: false,
            url: '/api/taskSortingApi/' + id,
            type: 'PUT',
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (data) {
                filltable(data);
            },
            error: function () {

                alert('Grid Not Load');

            }
        });
    }

    function DeleteTask(id, rId) {
        if (confirm('Are You Sure! You Want to Delete This Task')) {
            $.ajax({
                url: '/api/TaskApi/' + id,
                type: 'Delete',
                contentType: "application/json;charset=utf-8",
                success: function (data) {
                    alert(data);
                    location.reload();
                },
                error: function (data) { alert(data); }
            });
        }
    }

    function UpdateTask(id) {
        $.ajax({
            async: false,
            url: '/api/TaskApi/' + id,
            type: 'PUT',
            success: function (data) {
                window.location.href = '/Task/CreateTask';
            },
            error: function () {
                alert(data);
            }
        });
    }
    $('#images').on('change', function (e) {
        var files = e.target.files;
        var imgbytes = document.getElementById('images').files[0].size;
        var size = imgbytes / 1048576;
        if (files.length > 0 && size <= 2) {
            if (window.FormData !== undefined) {
                ImageData = new FormData();
                for (var x = 0; x < files.length; x++) {
                    ImageData.append("file" + x, files[x]);
                }
            }
        }
        else {
            document.getElementById("noti").innerText = "File Size not Allowed! Max. 2 MB is Allowed";
            document.getElementById("images").value = "";
        }
    });
    function status(val, id) {
        document.getElementById("noti").value = "";
        document.getElementById("note").value = "";
        document.getElementById("images").value = "";
        if (val == 4 || val == 3) {
            sessionStorage.setItem('val', val);
            sessionStorage.setItem('id', id);
            //open modal here
            $('#myModal').modal('toggle');

            if (val == 4) {

                document.getElementById("noteHeading").innerText = "Closing Note";
            }
            else {
                document.getElementById("noteHeading").innerText = "Completion Note";
            }
            return;
        }

        else {

            var model = { value: val, user: id, note: "" };
            $.ajax({
                async: true,
                url: '/api/angularApi/',
                type: 'DELETE',
                data: JSON.stringify(model),
                contentType: "application/json;charset=utf-8",
                success: function (data) {
                    console.log("success");
                },
                error: function () { console.log("Code Not Ok!"); }
            });
        }
    }

    function addNote() {
        var notes = document.getElementById("note").value;
        var filename = document.getElementById("images").value;
        if (notes == null || notes == "") {
            alert("Please enter note to save");
            return;
        }
        var model = { value: sessionStorage.getItem('val'), user: sessionStorage.getItem('id'), note: notes, filenames: filename };
        $.ajax({
            async: true,
            url: '/api/angularApi/',
            type: 'DELETE',
            data: JSON.stringify(model),
            contentType: "application/json;charset=utf-8",
            success: function (data) {
                $('#myModal').modal('toggle');
                //empty the text are with id note
                $.ajax({
                    url: '/api/UploadFileApi/' + 1,
                    type: "POST",
                    contentType: false,
                    processData: false,
                    data: ImageData,
                    success: function (result) {
                        console.log("Done");
                        document.getElementById("noti").value = "File Uploaded SucesFully";
                    },
                });
            },
            error: function () { console.log("Error In Uploading Image"); }
        });
    }
    function comments(id) {
        sessionStorage.setItem('task', "Yes");
        sessionStorage.setItem('taskId', id);
        $.ajax({
            async: false,
            url: '/api/messageApi/' + id,
            type: 'GET',
            contentType: "application/json;charset=utf-8",
            success: function (data) {
                window.location.href = '/message/ViewMessage';
                sessionStorage.getItem('id');
            },
            error: function () {
                console.log("Code Not Ok!");



            }
        });
    }
    function viewAll() {
        $.ajax({
            async: false,
            url: '/api/TaskApi/',
            type: 'GET',
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (data) {
                console.log(data);
                filltable(data);
            },
            error: function () {
                alert('Grid Not Load');
            }
        });
    }
</script>